[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Statistics 243 Fall 2022",
    "section": "",
    "text": "This site is UNDER CONSTRUCTION. Do not rely on materials here before August 22.\nSee the links above for the key resources for the course."
  },
  {
    "objectID": "index.html#questions-about-taking-the-class",
    "href": "index.html#questions-about-taking-the-class",
    "title": "Statistics 243 Fall 2022",
    "section": "Questions about taking the class",
    "text": "Questions about taking the class\nIf you would like to audit the class, enroll as a UC Berkeley undergraduate, or enroll as a concurrent enrollment student (i.e., for visiting students), or for some other reason are not enrolled, please fill out this survey as soon as possible. All those enrolled or wishing to take the class should have filled it out by Friday August 26 at noon.\nUndergraduates can only take the course with my permission and once all graduate students have an opportunity to register. I expect there will be space, and will likely start admitting undergraduates early the week of August 29 or late the previous week.\nConcurrent enrollment students can take the course with my permission and once all UC Berkeley students have had an opportunity to register. I expect there will be space, and will likely start admitting concurrent enrollment students early the week of August 29.\nPlease see the syllabus for the math and statistics background I expect, as well as the need to be familiar with R or to get up to speed in R during the first few weeks of the semester.\nThe first three weeks involve a lot of moving pieces, in part related to trying to get everyone up to speed with the bash shell and R. Please use these notes to keep on top of what you need to do."
  },
  {
    "objectID": "index.html#course-content",
    "href": "index.html#course-content",
    "title": "Statistics 243 Fall 2022",
    "section": "Course content",
    "text": "Course content\n\nThis site: most non-recorded course material\n\nFor html versions of the Units, see the navigation bar above.\nFor PDF versions of the Units, clone the GitHub repository, or if you’re not yet familiar with Git, download a zip file.\n\nVarious SCF tutorials: These include the various tutorials referred to in the class materials (e.g., the UNIX and bash shell tutorials, the dynamic documents tutorial, the Git tutorial, the string processing tutorial, etc.).\nbCourses: links to class course captures and any pre-recorded material.\n\nIf you’re not yet familiar with Git, go to the upper right of this page and click on ‘Clone or download’ and then ‘Download ZIP’."
  },
  {
    "objectID": "first_three_weeks.html",
    "href": "first_three_weeks.html",
    "title": "Statistics 243 Fall 2022",
    "section": "",
    "text": "(Required) By Friday August 26 at noon, fill out this class survey This is required and will be ‘counted’ in the class participation portion of your grade.\n(Required) By Friday August 26 at noon, fill out this survey of potential office hour times.\n(Optional) By Friday August 26 at noon, ONLY if you would like to attend the optional R help session, fill out this survey of potential times for the extra R help session\n(Required) By Monday August 29, please read Sections 1-3 of Unit 2, as I’ll just touch on an item or two from those sections in class and will assume you’re familiar with getting CSV-formatted and similar data into and out of R and some of the pitfalls that can arise.\n(Optional) By Monday August 29, if you are not comfortable with the basic UNIX usage we saw in the first class, please work through the UNIX basics tutorial here and answer the questions at the end. You don’t need to turn anything in. If you’d think you’re going to like help, please come to the UNIX help session on Friday August 26.\n\n\n\n\n\n(Optional) If you are not familiar with R at the level of modules 1-5 of the R bootcamp, work through those modules and the breakout problems associated with the modules. If you’d like help and an opportunity for extra practice, please attend the special R catch-up session listed below. Some other resources for R are listed at the end of module 11 of the bootcamp materials, so you could also use those resources. You should do this by the end of the week of September 6.\n(Required) By Friday September 2 at 10 am, read through this tutorial on using the bash shell. See the notes in Unit 3 on what topics you can skip; in particular you can skip the pages on Regular Expressions and Managing Processes. Work through the first 10 problems in the exercises the end of the tutorial and submit answers via bCourses (under Assignments) as text copied into bCourses. This is not a formal problem set, so you don’t need to worry about formatting nor about explaining/commenting your answers, nor do you need to put your answers in your GitHub class repository. In fact it’s even fine with me if you hand-write the answers and scan them to an electronic document. I just want to make sure you’ve worked through the tutorial.\n\nYou don’t need to look at all the sections in the tutorial. Please see Section 2 of Unit 3 in the course repository for a list of the sections you can skip over. I’ll be doing demonstrations on using the bash shell in class on Wednesday August 31, so that will be helpful as you work through the tutorial.\n\n(Required) Problem Set (PS) 1 will be due Wednesday September 7 at 10 am.\n(Required) By Friday September 10 at 10 am, read the regular expression material in the tutorial on using the bash shell. Also read Section 2.1 of the string processing tutorial (you can focus on Section 2.1.2 on stringr if you wish). Then answer the regular expressions (regex) practice problems at this Google form. This is not one of the graded problem sets but rather an ‘assignment’ that will simply be noted as being completed or not."
  },
  {
    "objectID": "first_three_weeks.html#events",
    "href": "first_three_weeks.html#events",
    "title": "Statistics 243 Fall 2022",
    "section": "Events",
    "text": "Events\n\n(Optional) Thursday August 25 or Wednesday September 7, 4-5:30 pm: introductory LaTeX sessions run by the library. In particular I highly recommend (in particular if you are a Statistics graduate student) that you know how to create equations in LaTeX.\n(Optional) Friday August 26, 1:00-4:30 pm in Evans 344: Help session for installing software, accessing a UNIX-style command line, and basic UNIX usage (e.g., the UNIX basics tutorial). You should have software installed, be able to accesss the command line, and have started to become familiar with basic UNIX usage before class on Wednesday August 31.\n(Optional) TBD: two-hour R help session, date/time/location TBD, for those not yet familiar with R at the level of modules 1-5 of the R bootcamp.\n(Required) Friday September 2: First section/lab on using Git, setting up your GitHub repository for problem sets, and using R Markdown/knitr to generate dynamic documents. Please come only to the section you are registered for given space limits in the room, unless you have talked with Chris and have his permission.\n(Required) Friday September 9: Second section/lab on assertions and testing. Please come only to the section you are registered for given space limits in the room, unless you have talked with Chris and have his permission."
  },
  {
    "objectID": "units/unit1-unix.html",
    "href": "units/unit1-unix.html",
    "title": "Introduction to UNIX, computers, and key tools",
    "section": "",
    "text": "PDF\nBy UNIX, I mean any UNIX-like operating system, including Linux and Mac OS X. On the Mac you can access a UNIX terminal window with the Terminal application (via Applications -> Utilities -> Terminal from the Finder). Most modern scientific computing is done on UNIX-based machines, often by remotely logging in to a UNIX-based server.\nThere are a variety of ways to get access to a UNIX-style command line environment, outlined in the software tips on the course website."
  },
  {
    "objectID": "units/unit1-unix.html#some-useful-editors",
    "href": "units/unit1-unix.html#some-useful-editors",
    "title": "Introduction to UNIX, computers, and key tools",
    "section": "Some useful editors",
    "text": "Some useful editors\n\nvarious editors available on all operating systems:\n\ntraditional editors born in UNIX: emacs, vim\nsome newer editors: Atom, Sublime Text (Sublime is proprietary/not free)\n\nWindows-specific: WinEdt\nMac-specific: Aquamacs Emacs, TextMate, TextEdit\nRStudio provides a built-in editor for R code and R Markdown files. (Note: RStudio as a whole is an IDE (integrated development environment. The editor is just the editing window where you edit code (and R Markdown) files.)\nVSCode has a powerful code editor that is customized to work with various languages.\n\nAs you get started it’s ok to use a very simple text editor such as Notepad in Windows, but you should take the time in the next few weeks to try out more powerful editors such as one of those listed above. It will be well worth your time over the course of your graduate work and then your career.\nBe careful in Windows - file suffixes are often hidden."
  },
  {
    "objectID": "units/unit1-unix.html#optional-basic-emacs",
    "href": "units/unit1-unix.html#optional-basic-emacs",
    "title": "Introduction to UNIX, computers, and key tools",
    "section": "(Optional) Basic emacs",
    "text": "(Optional) Basic emacs\nEmacs is one option as an editor. I use Emacs a fair amount, so I’m including some tips here, but other editors listed above are just as good.\n\nEmacs has special modes for different types of files: R code files, C code files, Latex files – it’s worth your time to figure out how to set this up on your machine for the kinds of files you often work on\n\nFor working with R, ESS (emacs speaks statistics) mode is helpful. This is built into Aquamacs Emacs.\n\nTo open emacs in the terminal window rather than as a new window, which is handy when it’s too slow (or impossible) to pass (i.e., tunnel) the graphical emacs window through ssh: emacs -nw file.txt\nSome helpful keystroke sequence shorcuts\n\n\n\n\n\n\n\n\nSequence\nResult\n\n\n\n\nC-x,C-c\nClose the file\n\n\nC-x,C-s\nSave the file\n\n\nC-x,C-w\nSave with a new name\n\n\nC-s\nSearch\n\n\nESC\nGet out of command buffer at bottom of screen\n\n\nC-a\nGo to beginning of line\n\n\nC-e\nGo to end of line\n\n\nC-k\nDelete the rest of the line from cursor forward\n\n\nC-space, then move to end of block\nHighlight a block of text\n\n\nC-w\nRemove the highlighted block, putting it in the kill buffer\n\n\nC-y (after using C-k or C-w)\nPaste from kill buffer (‘y’ is for ‘yank’)"
  },
  {
    "objectID": "office_hours.html",
    "href": "office_hours.html",
    "title": "Statistics 243 Fall 2022",
    "section": "",
    "text": "Chris (Evans 495 or Zoom (see Ed Discussion post for link))\n\nTBD\ngenerally available immediately after class\nfeel free to schedule an appointment or drop by if my door is open\n\nJames:\n\nTBD\nFridays during unused section time, generally 2-3 pm and 4-4:30 pm (Evans 344)"
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Statistics 243 Fall 2022",
    "section": "",
    "text": "Statistics 243 is an introduction to statistical computing, taught using R. The course will cover both programming concepts and statistical computing concepts. Programming concepts will include data and text manipulation, data structures, functions and variable scope, regular expressions, debugging/testing, and parallel processing. Statistical computing topics will include working with large datasets, numerical linear algebra, computer arithmetic/precision, simulation studies and Monte Carlo methods, numerical optimization, and numerical integration/differentiation. A goal is that coverage of these topics complement the models/methods discussed in the rest of the statistics/biostatistics graduate curriculum. We will also cover the basics of UNIX/Linux, in particular some basic shell scripting and operating on remote servers, as well as a moderate amount of Python.\n\n\nWhile the course is taught using R and you will learn a lot about using R at an advanced level, this is not a course about learning R. Rather the focus of the course is computing for statistics and data science more generally, using R to illustrate the concepts. Also, this is not a course that will cover specific statistical/machine learning/data analysis methods.\n\n\n\nInformal prerequisites: If you are not a statistics or biostatistics graduate student, please chat with me if you’re not sure if this course makes sense for you. A background in calculus, linear algebra, probability and statistics is expected, as well as a basic ability to operate on a computer (but I do not assume familiarity with the UNIX-style command line/terminal/shell). Furthermore, I’m expecting you will know the basics of R, at the level of the Modules 1-5 in the R bootcamp offered Aug. 20-21, 2022. If you don’t have that background you’ll need to spend time in the initial couple weeks getting up to speed. I may also be able to give access to the bootcamp videos. In addition, we’ll have an optional hands-on practice session during the second or third week of class, and the GSI can also provide assistance."
  },
  {
    "objectID": "syllabus.html#covid-considerations",
    "href": "syllabus.html#covid-considerations",
    "title": "Statistics 243 Fall 2022",
    "section": "Covid considerations",
    "text": "Covid considerations\nWe’ll be following university policy through the semester.\n\nClass and section are in person. I will be recording class (but not section) via the room’s course capture capabilities so if anyone needs to miss a class they should be able to catch up. There is in-class discussion and problem-solving so I expect students to attend class in general. However, please do not come to class if you feel any symptoms – you can watch the recording and it will not affect your grade in any way.\nMasks are not required at the moment, but you are welcome to wear one. For the sake of communicating most clearly I won’t wear one while teaching."
  },
  {
    "objectID": "syllabus.html#objectives-of-the-course",
    "href": "syllabus.html#objectives-of-the-course",
    "title": "Statistics 243 Fall 2022",
    "section": "Objectives of the course",
    "text": "Objectives of the course\nThe goals of the course are that, by the end of the course, students be able to:\n\noperate effectively in a UNIX environment and on remote servers and compute clusters;\nhave a solid understanding of general programming concepts and principles, and be able to program effectively in R with an advanced knowledge of R functionality;\nbe familiar with concepts and tools for reproducible research and good scientific computing practices; and\nunderstand in depth and be able to make use of principles of numerical linear algebra, optimization, and simulation for statistics- and data science-related analyses and research."
  },
  {
    "objectID": "syllabus.html#topics-in-order-with-rough-timing",
    "href": "syllabus.html#topics-in-order-with-rough-timing",
    "title": "Statistics 243 Fall 2022",
    "section": "Topics (in order with rough timing)",
    "text": "Topics (in order with rough timing)\nThe ‘days’ here are (roughly) class sessions, as general guidance.\n\nIntroduction to UNIX, operating on a compute server (1 day)\nData formats, data access, webscraping, data structures (2 days)\nDebugging, good programming practices, reproducible research (1 day)\nThe bash shell and shell scripting, version control (3 days)\nProgramming concepts and advanced R programming: text processing and regular expressions, object-oriented programming, functions and variable scope, efficient programming, memory use (9 days)\nComputer arithmetic/representation of numbers on a computer (3 days)\nParallel processing (2 days)\nWorking with databases, hashing, and big data (3 days)\nNumerical linear algebra (5 days)\nSimulation studies and Monte Carlo (2 days)\nOptimization (7 days)\nNumerical integration and differentiation (1 day)\nGraphics (1 day)\n\nIf you want to get a sense of what material we will cover in more detail, in advance, you can take a look at the materials in the units directory of GitHub repository from when I taught the class in 2021. See https://github.com/berkeley-stat243/stat243-fall-2021."
  },
  {
    "objectID": "syllabus.html#personnel",
    "href": "syllabus.html#personnel",
    "title": "Statistics 243 Fall 2022",
    "section": "Personnel",
    "text": "Personnel\n\nInstructor:\n\nChris Paciorek (paciorek@stat.berkeley.edu)\n\nGSI\n\nJames Duncan\n\nOffice hours can be found here.\nWhen to see us about an assignment: We’re here to help, including providing guidance on assignments. You don’t want to be futilely spinning your wheels for a long time getting nowhere. That said, before coming to see us about a difficulty, you should try something a few different ways and define/summarize for yourself what is going wrong or where you are getting stuck."
  },
  {
    "objectID": "syllabus.html#course-websites-github-piazza-gradescope-and-bcourses",
    "href": "syllabus.html#course-websites-github-piazza-gradescope-and-bcourses",
    "title": "Statistics 243 Fall 2022",
    "section": "Course websites: GitHub, Ed Discussion, Gradescope, and bCourses",
    "text": "Course websites: GitHub, Ed Discussion, Gradescope, and bCourses\nKey websites for the course are:\n\nThis course website, which is hosted on GitHub pages, and the GitHub repository containing the source materials: https://github.com/berkeley-stat243/stat243-fall-2022\nSCF tutorials for additional content: https://statistics.berkeley.edu/computing/training/tutorials\nEd Discussion site for discussions/Q&A: https://edstem.org/us/courses/25090/discussion/\nbCourses site for course capture recordings and possibly some other materials: https://bcourses.berkeley.edu/courses/1507757.\nGradescope for assignments (also linked from bCourses): [UNDER CONSTRUCTION]https://www.gradescope.com/courses/XYZ\n\nAll course materials will be posted on here / on GitHub except for video content, which will be in bCourses.\n\nCourse discussion\nWe will use the course Ed Discussion site for communication (announcements, questions, and discussion). You should ask questions about class material and problem sets through the site. Please use this site for your questions so that either James or I can respond and so that everyone can benefit from the discussion. I suggest you to modify your settings on Ed Discussion so you are informed by email of postings. I strongly encourage you to respond to or comment on each other’s questions as well (this will help your class participation grade), although of course you should not provide a solution to a problem set problem. If you have a specific administrative question you need to direct just to me, it’s fine to email me directly or post private on the Discussion site. But if you simply want to privately ask a question about content, then just come to an office hour or see me after class or James during/after section.\nIf you’re enrolled in the class you should be a member of the group and be able to access it. If you’re auditing or not yet enrolled and would like access, make sure to fill out the course survey and I will add you. In addition, we will use Gradescope for viewing grades."
  },
  {
    "objectID": "syllabus.html#course-material",
    "href": "syllabus.html#course-material",
    "title": "Statistics 243 Fall 2022",
    "section": "Course material",
    "text": "Course material\n\nPrimary materials: Course notes on GitHub, SCF tutorials, and potentially pre-recorded videos on bCourses.\nBack-up textbooks:\n\nFor bash: Newham, Cameron and Rosenblatt, Bill. Learning the bash Shell (available electronically through OskiCat: http://uclibs.org/PID/77225)\nFor R:\n\nAdler, Joseph; R in a Nutshell (available electronically through OskiCat: http://uclibs.org/PID/151634)\nWickham, Hadley: Advanced R: http://adv-r.had.co.nz/\n\nFor statistical computing topics:\n\nGentle, James. Computational Statistics (available electronically through OskiCat: http://dx.doi.org/10.1007/978-0-387-98144-4)\nGentle, James. Matrix Algebra https://link-springer-com.libproxy.berkeley.edu/book/10.1007%2F978-3-319-64867-5 or Numerical Linear Algebra with Applications in Statistics https://link-springer-com.libproxy.berkeley.edu/chapter/10.1007/978-1-4612-0623-1_1\n\nOther resources with more details on particular aspects of R:\n\nChambers, John; Software for Data Analysis: Programming with R (available electronically through OskiCat: http://dx.doi.org/10.1007/978-0-387-75936-4)\nXie, Yihui; Dynamic documents with R and knitr. (available electronically through Oskicat)\nNolan, Deborah and Temple Lang, Duncan. XML and Web Technologies for Data Sciences with R. https://link.springer.com/book/10.1007%2F978-1-4614-7900-0\nThe R-intro and R-lang documentation. https://www.cran.r-project.org/manuals.html\nMurrell, Paul; R Graphics, 2nd ed. http://www.stat.auckland.ac.nz/\\(\\sim\\)paul/RG2e/\nMurrell, Paul; Introduction to Data Technologies. http://www.stat.auckland.ac.nz/\\(\\sim\\)paul/ItDT/\n\nOther resources with more detail on particular aspects of statistical computing concepts:\n\nLange, Kenneth; Numerical Analysis for Statisticians, 2nd ed. (first edition is available electronically through OskiCat:\nhttps://link.springer.com/book/10.1007%2Fb98850)\nMonahan, John; Numerical Methods of Statistics (available electronically through OskiCat:\nhttp://dx.doi.org/10.1017/CBO9780511977176)"
  },
  {
    "objectID": "syllabus.html#section",
    "href": "syllabus.html#section",
    "title": "Statistics 243 Fall 2022",
    "section": "Section",
    "text": "Section\nThe GSI will lead a two-hour discussion section each week (there are two sections). By and large, these will only last for about one hour of actual content, but the second hour may be used as an office hour with the GSI or for troubleshooting software during the early weeks. The discussion sections will vary in format and topic, but material will include demonstrations on various topics (version control, debugging, testing, etc.), group work on these topics, discussion of relevant papers, and discussion of problem set solutions. The first section (noon - 2 pm) generally has more demand, so to avoid having too many people in the room, you should go to your assigned section unless you talk to me first."
  },
  {
    "objectID": "syllabus.html#computing-resources",
    "href": "syllabus.html#computing-resources",
    "title": "Statistics 243 Fall 2022",
    "section": "Computing Resources",
    "text": "Computing Resources\nMost work for the course can be done on your laptop. Later in the course we’ll also use the Statistics Department cluster. You can also use the SCF JupyterHub or the campus DataHub to access a bash shell or run RStudio.\nThe software needed for the course is as follows:\n\nAccess to the UNIX command line (bash shell)\nGit\nR (RStudio is recommended but by no means required)\nPython (later in the course)\n\nWe have some tips for software installation (and access to DataHub), including suggestions for how to access a UNIX shell, which you’ll need to be able to do by the second week of class."
  },
  {
    "objectID": "syllabus.html#class-time",
    "href": "syllabus.html#class-time",
    "title": "Statistics 243 Fall 2022",
    "section": "Class time",
    "text": "Class time\nMy goal is to have classes be an interactive environment. This is both more interesting for all of us and more effective in learning the material. I encourage you to ask questions and will pose questions to the class to think about, respond to via Google forms, and discuss. To increase time for discussion and assimilation of the material in class, before some classes I may ask that you read material or work through tutorials in advance of class. Occasionally, I will ask you to submit answers to questions in advance of class as well.\nPlease do not use phones during class and limit laptop use to the material being covered.\nStudent backgrounds with computing will vary. For those of you with limited background on a topic, I encourage you to ask questions during class so I know what you find confusing. For those of you with extensive background on a topic (there will invariably be some topics where one of you will know more about it than I do or have more real-world experience), I encourage you to pitch in with your perspective. In general, there are many ways to do things on a computer, particularly in a UNIX environment and in R, so it will help everyone (including me) if we hear multiple perspectives/ideas.\nFinally, class recordings for review or to make up for absence will be available through the bCourses Media Gallery, available on the Media Gallery tab on the bCourses page for the class."
  },
  {
    "objectID": "syllabus.html#course-requirements-and-grading",
    "href": "syllabus.html#course-requirements-and-grading",
    "title": "Statistics 243 Fall 2022",
    "section": "Course requirements and grading",
    "text": "Course requirements and grading\n\nScheduling Conflicts\nCampus asks that I include this information about conflicts: Please notify me in writing by the second week of the term about any known or potential extracurricular conflicts (such as religious observances, graduate or medical school interviews, or team activities). I will try my best to help you with making accommodations, but I cannot promise them in all cases. In the event there is no mutually-workable solution, you may be dropped from the class.\nThe main conflict that would be a problem would be the quizzes, whose dates I will determine in late August / early September.\nQuizzes are in-person. There is no remote option, and the only make-up accommodations I will make are for illness or serious personal issues. Do not schedule any travel that may conflict with a quiz.\n\n\nCourse grades\nThe grade for this course is primarily based on assignments due every 1-2 weeks, two quizzes (likely in early-mid October and mid-late November), and a final group project. I will also provide extra credit questions on some problem sets. There is no final exam. 50% of the grade is based on the problem sets, 25% on the quizzes, 15% on the project, and 10% on your participation in discussions on Ed, your responses to the in-class Google forms questions, as well as occasional brief questions that I will ask you to answer in advance of the next class.\nGrades will generally be As and Bs. An A involves doing all the work, getting full credit on most of the problem sets, showing competence on the quizzes, and doing a thorough job on the final project.\n\n\nProblem sets\nWe will be less willing to help you if you come to our office hours or post a question online at the last minute. Working with computers can be unpredictable, so give yourself plenty of time for the assignments.\nThere are several rules for submitting your assignments.\n\nYou should prepare your assignments using either R Markdown (or the new Quarto format) or LaTeX plus knitr.\nProblem set submission consists of both of the following:\n\nA PDF submitted electronically through Gradescope, by the start of class (10 am) on the due date, and\nAn electronic copy of the PDF, code file, and R Markdown/Quarto/knitr document pushed to your class GitHub repository, following the instructions to be provided by the GSI.\n\nOn-time submission will be determined based on the time stamp of when the PDF is submitted to Gradescope.\nAnswers should consist of textual response or mathematical expressions as appropriate, with key chunks of code embedded within the document. Extensive additional code can be provided as an appendix. Before diving into the code for a problem, you should say what the goal of the code is and your strategy for solving the problem. Raw code without explanation is not an appropriate solution. Please see our qualitative grading rubric for guidance. In general the rubric is meant to reinforce good coding practices and high-quality scientific communication.\nAny mathematical derivations may be done by hand and scanned with your phone if you prefer that to writing up LaTeX equations.\n\nNote: R Markdown is an extension to the Markdown markup language that allows one to embed R code within an HTML document. Quarto is a new tool that generalizes R Markdown and provides the compatible qmd format. knitr is a tool that allows one to embed chunks of code within LaTeX documents, including with Overleaf and the LyX GUI front-end to LaTeX. Please see the SCF dynamics document tutorial; there will be additional information in the first section and on the first problem set.\n\n\nSubmitting assignments\nIn the first section (September 2), we’ll discuss how to submit your problem sets both on Gradescope and via your class GitHub repository, located at https:github.berkeley.edu/<your_calnet_username>.\n\n\nProblem set grading\nThe grading scheme for problem sets is as follows. Each problem set will receive a numeric score for (1) presentation and explanation of results, (2) technical accuracy of code or mathematical derivation, and (3) code quality/style and creativity. For each of these three components, the possible scores are:\n\n0 = no credit,\n1 = partial credit (you did some of the problems but not all),\n2 = satisfactory (you tried everything but there were pieces of what you did that didn’t solve or present/explain one or more problems in a complete way), and\n3 = full credit.\n\nAgain, the qualitative grading rubric provides guidance on what we want to see for full credit.\nFor components #1 and #3, many of you will get a score of 2 for some problem sets as you develop good coding practices. You can still get an A in the class despite this.\nYour total score for the PS is a weighted sum of the scores for the three components. If you turn in a PS late, I’ll bump you down by two points (out of the available). If you turn it in really late (i.e., after we start grading them), I will bump you down by four points. No credit after solutions are distributed.\n\n\nFinal project\nThe final project will be a joint coding project in groups of 3-4. I’ll assign an overall task, and you’ll be responsible for dividing up the work, coding, debugging, testing, and documentation. You’ll need to use the Git version control system for working in your group.\n\n\nRules for working together and the campus honor code\nI encourage you to work together and help each other out. However, the problem set solutions you submit must be your own. What do I mean by that?\n\nYou must first try to figure out a given problem on your own. After that, if you’re stuck or want to explore alternative approaches or check what you’ve done, feel free to consult with your fellow students and with the GSI and me.\nWhat does “consult with a fellow student mean”? You can discuss a problem with another student, brainstorm approaches, and share code syntax (generally not more than one line) on how to do small individual coding tasks within a problem.\n\nYou should not ask another student for complete code or solutions, or look at their code/solution.\nYou should not share complete code or solutions with another student or on Ed Discussion.\n\nYou must provide attribution for ideas obtained elsewhere, including other students.\n\nIf you got a specific idea for how to do part of a problem from a fellow student, you should note that in your solution in the appropriate place (for specific syntax ideas, note this in a code comment), just as you would cite a book or URL.\nYou MUST note on your problem set solution any fellow students who you worked/consulted with.\nYou do not need to cite any Ed Discussion posts nor any discussions with Chris or James.\n\nUltimately, your solution to a problem set (writeup and code) must be your own, and you’ll hear from me if either look too similar to someone else’s.\n\nPlease see the last section of this document for more information on the Campus Honor Code, which I expect you to follow."
  },
  {
    "objectID": "syllabus.html#feedback",
    "href": "syllabus.html#feedback",
    "title": "Statistics 243 Fall 2022",
    "section": "Feedback",
    "text": "Feedback\nI welcome comments and suggestions and concerns. Particularly good suggestions will count towards your class participation grade."
  },
  {
    "objectID": "syllabus.html#accomodations-for-students-with-disabilities",
    "href": "syllabus.html#accomodations-for-students-with-disabilities",
    "title": "Statistics 243 Fall 2022",
    "section": "Accomodations for Students with Disabilities",
    "text": "Accomodations for Students with Disabilities\nPlease see me as soon as possible if you need particular accommodations, and we will work out the necessary arrangements."
  },
  {
    "objectID": "syllabus.html#campus-honor-code",
    "href": "syllabus.html#campus-honor-code",
    "title": "Statistics 243 Fall 2022",
    "section": "Campus Honor Code",
    "text": "Campus Honor Code\nThe following is the Campus Honor Code. With regard to collaboration and independence, please see my rules regarding problem sets above – Chris.\nThe student community at UC Berkeley has adopted the following Honor Code: “As a member of the UC Berkeley community, I act with honesty, integrity, and respect for others.” The hope and expectation is that you will adhere to this code.\nCollaboration and Independence: Reviewing lecture and reading materials and studying for exams can be enjoyable and enriching things to do with fellow students. This is recommended. However, unless otherwise instructed, homework assignments are to be completed independently and materials submitted as homework should be the result of one’s own independent work.\nCheating: A good lifetime strategy is always to act in such a way that no one would ever imagine that you would even consider cheating. Anyone caught cheating on a quiz or exam in this course will receive a failing grade in the course and will also be reported to the University Center for Student Conduct. In order to guarantee that you are not suspected of cheating, please keep your eyes on your own materials and do not converse with others during the quizzes and exams.\nPlagiarism: To copy text or ideas from another source without appropriate reference is plagiarism and will result in a failing grade for your assignment and usually further disciplinary action. For additional information on plagiarism and how to avoid it, see, for example: http://gsi.berkeley.edu/teachingguide/misconduct/prevent-plag.html\nAcademic Integrity and Ethics: Cheating on exams and plagiarism are two common examples of dishonest, unethical behavior. Honesty and integrity are of great importance in all facets of life. They help to build a sense of self-confidence, and are key to building trust within relationships, whether personal or professional. There is no tolerance for dishonesty in the academic world, for it undermines what we are dedicated to doing – furthering knowledge for the benefit of humanity.\nYour experience as a student at UC Berkeley is hopefully fueled by passion for learning and replete with fulfilling activities. And we also appreciate that being a student may be stressful. There may be times when there is temptation to engage in some kind of cheating in order to improve a grade or otherwise advance your career. This could be as blatant as having someone else sit for you in an exam, or submitting a written assignment that has been copied from another source. And it could be as subtle as glancing at a fellow student’s exam when you are unsure of an answer to a question and are looking for some confirmation. One might do any of these things and potentially not get caught. However, if you cheat, no matter how much you may have learned in this class, you have failed to learn perhaps the most important lesson of all."
  },
  {
    "objectID": "schedule_first_weeks.html",
    "href": "schedule_first_weeks.html",
    "title": "Statistics 243 Fall 2022",
    "section": "",
    "text": "Week\nDay\nDate\nTime\nActivity\nAssignment/Reading\nComments\n\n\n\n\n1\nFriday\n2022-08-26\nnoon\n\nclass survey\nThis is required and will be ‘counted’ in the class participation portion of your grade\n\n\n1\nFriday\n2022-08-26\nnoon\n\noffice hour time survey\n\n\n\n\n\n\n\n(Required) By Friday August 26 at noon, fill out this class survey This is required and will be ‘counted’ in the class participation portion of your grade.\n(Required) By Friday August 26 at noon, fill out this survey of potential office hour times.\n(Optional) By Friday August 26 at noon, ONLY if you would like to attend the optional R help session, fill out this survey of potential times for the extra R help session\n(Required) By Monday August 29, please read Sections 1-3 of Unit 2, as I’ll just touch on an item or two from those sections in class and will assume you’re familiar with getting CSV-formatted and similar data into and out of R and some of the pitfalls that can arise.\n(Optional) By Monday August 29, if you are not comfortable with the basic UNIX usage we saw in the first class, please work through the UNIX basics tutorial here and answer the questions at the end. You don’t need to turn anything in. If you’d think you’re going to like help, please come to the UNIX help session on Friday August 26.\n\n\n\n\n\n(Optional) If you are not familiar with R at the level of modules 1-5 of the R bootcamp, work through those modules and the breakout problems associated with the modules. If you’d like help and an opportunity for extra practice, please attend the special R catch-up session listed below. Some other resources for R are listed at the end of module 11 of the bootcamp materials, so you could also use those resources. You should do this by the end of the week of September 6.\n(Required) By Friday September 2 at 10 am, read through this tutorial on using the bash shell. See the notes in Unit 3 on what topics you can skip; in particular you can skip the pages on Regular Expressions and Managing Processes. Work through the first 10 problems in the exercises the end of the tutorial and submit answers via bCourses (under Assignments) as text copied into bCourses. This is not a formal problem set, so you don’t need to worry about formatting nor about explaining/commenting your answers, nor do you need to put your answers in your GitHub class repository. In fact it’s even fine with me if you hand-write the answers and scan them to an electronic document. I just want to make sure you’ve worked through the tutorial.\n\nYou don’t need to look at all the sections in the tutorial. Please see Section 2 of Unit 3 in the course repository for a list of the sections you can skip over. I’ll be doing demonstrations on using the bash shell in class on Wednesday August 31, so that will be helpful as you work through the tutorial.\n\n(Required) Problem Set (PS) 1 will be due Wednesday September 7 at 10 am.\n(Required) By Friday September 10 at 10 am, read the regular expression material in the tutorial on using the bash shell. Also read Section 2.1 of the string processing tutorial (you can focus on Section 2.1.2 on stringr if you wish). Then answer the regular expressions (regex) practice problems at this Google form. This is not one of the graded problem sets but rather an ‘assignment’ that will simply be noted as being completed or not."
  },
  {
    "objectID": "schedule_first_weeks.html#events",
    "href": "schedule_first_weeks.html#events",
    "title": "Statistics 243 Fall 2022",
    "section": "Events",
    "text": "Events\n\n(Optional) Thursday August 25 or Wednesday September 7, 4-5:30 pm: introductory LaTeX sessions run by the library. In particular I highly recommend (in particular if you are a Statistics graduate student) that you know how to create equations in LaTeX.\n(Optional) Friday August 26, 1:00-4:30 pm in Evans 344: Help session for installing software, accessing a UNIX-style command line, and basic UNIX usage (e.g., the UNIX basics tutorial). You should have software installed, be able to accesss the command line, and have started to become familiar with basic UNIX usage before class on Wednesday August 31.\n(Optional) TBD: two-hour R help session, date/time/location TBD, for those not yet familiar with R at the level of modules 1-5 of the R bootcamp.\n(Required) Friday September 2: First section/lab on using Git, setting up your GitHub repository for problem sets, and using R Markdown/knitr to generate dynamic documents. Please come only to the section you are registered for given space limits in the room, unless you have talked with Chris and have his permission.\n(Required) Friday September 9: Second section/lab on assertions and testing. Please come only to the section you are registered for given space limits in the room, unless you have talked with Chris and have his permission."
  },
  {
    "objectID": "rubric.html",
    "href": "rubric.html",
    "title": "Statistics 243 Fall 2022",
    "section": "",
    "text": "This document provides guidance for submitting high-quality problem set (and project) solutions. This guidance is based on general good practices for scientific communication, reproducible research, and software development."
  },
  {
    "objectID": "rubric.html#general-presentation",
    "href": "rubric.html#general-presentation",
    "title": "Statistics 243 Fall 2022",
    "section": "General presentation",
    "text": "General presentation\n\nSimply presenting code or derivations is not sufficient.\nBriefly describe the overall goal or strategy before providing code/derivations.\nAs needed describe what the pieces of your code/derivation are doing to make it easier for a reader to follow the steps."
  },
  {
    "objectID": "rubric.html#coding-practice",
    "href": "rubric.html#coding-practice",
    "title": "Statistics 243 Fall 2022",
    "section": "Coding practice",
    "text": "Coding practice\n\nMinimize (or eliminate) use of global variables.\nBreak down work into core tasks and develop small, modular, self-contained functions (or class methods) to carry out those tasks.\nDon’t repeat code. As needed refactor code to create new functions (or class methods).\nFunctions and classes should be “weakly coupled”, interacting via their interfaces and not by having to know the internals of how they work.\nUse data structures appropriate for the computations that need to be done.\nDon’t hard code ‘magic’ numbers. Assign such numbers to variables with clear names, e.g., speedOfLight = 3e8.\nProvide reasonable default arguments to functions (or class methods) when possible.\nProvide tests (including unit tests) when requested (this is good general practice but we won’t require it in all cases).\nAvoid overly complicated syntax – try to use the clearest syntax you can to solve the problem.\nIn terms of speed, don’t worry about it too much so long as the code finishes real-world tasks in a reasonable amount of time. When optimizing, focus on the parts of the code that are the bottlenecks.\nUse functions already available in the language rather than recreating yourself."
  },
  {
    "objectID": "rubric.html#code-style",
    "href": "rubric.html#code-style",
    "title": "Statistics 243 Fall 2022",
    "section": "Code style",
    "text": "Code style\n\nFollow a consistent style. For example (not required) the tidyverse style guide or its offshoot Google R style.\nUse informative variable and function names and have a consistent naming style.\nUse whitespace (spaces, newlines) and parentheses to make the structure of the code easy to understand and the individual syntax pieces clear.\nUse consistent indentation to make the structure of the code easy to understand.\nProvide comments that give the goal of a given piece of code and why it does things, but don’t use comments to restate what the code does when it should be obvious from reading the code.\n\nProvide summaries for blocks of code.\nFor particularly complicated syntax, say what a given piece of code does."
  },
  {
    "objectID": "software.html",
    "href": "software.html",
    "title": "Statistics 243 Fall 2022",
    "section": "",
    "text": "Accessing the UNIX command line (i.e., bash or zsh shell)\nInstalling Git\nInstalling R and RStudio\n\nInstalling R and RStudio on Windows\n\nUsing Linux via the Windows Subsystem for Linux\nAccessing Python\nSubmitting problem sets"
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Week\n\n\nDay\n\n\nDate\n\n\nTopic\n\n\nReading\n\n\nWeekly Work\n\n\n\n\n\n\n1\n\n\nMonday\n\n\n1/17\n\n\nNo Class: Holiday\n\n\nnone\n\n\nLab 1\n\n\n\n\n\n\nWednesday\n\n\n1/19\n\n\nExplaining the World with Data\n\n\nnone\n\n\nPS 1\n\n\n\n\n\n\nFriday\n\n\n1/21\n\n\nTaxonomy of Data\n\n\nOpenIntro 1\n\n\nQuiz: none\n\n\n\n\n2\n\n\nMonday\n\n\n1/24\n\n\nA Tool for Computing with Data\n\n\nGrolemund 2\n\n\nLab 2\n\n\n\n\n\n\nWednesday\n\n\n1/26\n\n\nDescribing Categorical Data\n\n\nOpenIntro 4\n\n\nPS 2\n\n\n\n\n\n\nFriday\n\n\n1/28\n\n\nDescribing Numerical Data I\n\n\nOpenIntro 5\n\n\nQuiz: none\n\n\n\n\n3\n\n\nMonday\n\n\n1/31\n\n\nDescribing Numerical Data II + Grammar of Graphics\n\n\nR4DS 3\n\n\nLab 3\n\n\n\n\n\n\nWednesday\n\n\n2/2\n\n\nReproducibility\n\n\nR4DS 27\n\n\nPS 3\n\n\n\n\n\n\nFriday\n\n\n2/4\n\n\nEffective Data Visualization\n\n\nDV 3\n\n\nQuiz 1\n\n\n\n\n4\n\n\nMonday\n\n\n2/7\n\n\nWorking with Subsets\n\n\nnone\n\n\nLab 4\n\n\n\n\n\n\nWednesday\n\n\n2/9\n\n\nData Pipelines and Groupwise Aggregation\n\n\nnone\n\n\nPS 4\n\n\n\n\n\n\nFriday\n\n\n2/11\n\n\nData Generating Machines\n\n\nnone\n\n\nQuiz: none\n\n\n\n\n5\n\n\nMonday\n\n\n2/14\n\n\nRandom Variables\n\n\nOI Probability Ch.3\n\n\nLab 5\n\n\n\n\n\n\nWednesday\n\n\n2/16\n\n\nExpected Value and Variance\n\n\nOI Probability Ch.3\n\n\nPS 5\n\n\n\n\n\n\nFriday\n\n\n2/18\n\n\nFundamental Distributions\n\n\nOI Probability Ch.3\n\n\nQuiz: 2\n\n\n\n\n6\n\n\nMonday\n\n\n2/21\n\n\nNo Class: Holiday\n\n\nnone\n\n\nLab 6\n\n\n\n\n\n\nWednesday\n\n\n2/23\n\n\nConfidence Intervals\n\n\nOpenIntro 12\n\n\nPS 6\n\n\n\n\n\n\nFriday\n\n\n2/25\n\n\nUsing the Bootstrap\n\n\ninfer docs\n\n\nQuiz: none\n\n\n\n\n7\n\n\nMonday\n\n\n2/28\n\n\nComputational vs Mathematical Intervals\n\n\nOpenIntro 2.1\n\n\nLab 7\n\n\n\n\n\n\nWednesday\n\n\n3/2\n\n\nHypothesis Testing Framework\n\n\nOpenIntro 11\n\n\nPS 7\n\n\n\n\n\n\nFriday\n\n\n3/4\n\n\nPermutation vs Taking Draws\n\n\nOpenIntro 17\n\n\nQuiz: 3\n\n\n\n\n8\n\n\nMonday\n\n\n3/7\n\n\nThe Central Limit Theorem\n\n\nOpenIntro 13\n\n\nLab 8\n\n\n\n\n\n\nWednesday\n\n\n3/9\n\n\nStatistical Errors\n\n\nOpenIntro 14\n\n\nPS 8\n\n\n\n\n\n\nFriday\n\n\n3/11\n\n\nInference for Means I\n\n\nOpenIntro 19\n\n\nQuiz: none\n\n\n\n\n9\n\n\nMonday\n\n\n3/14\n\n\nInference for Means II\n\n\nOpenIntro 20\n\n\nLab: none\n\n\n\n\n\n\nWednesday\n\n\n3/16\n\n\nMidterm Review\n\n\nnone\n\n\nPS: none\n\n\n\n\n\n\nFriday\n\n\n3/18\n\n\nMidterm\n\n\nnone\n\n\nnone\n\n\n\n\n10\n\n\nMonday\n\n\n3/21\n\n\nNo Class: Spring Break\n\n\nnone\n\n\nnone\n\n\n\n\n\n\nWednesday\n\n\n3/23\n\n\nNo Class: Spring Break\n\n\nnone\n\n\nnone\n\n\n\n\n\n\nFriday\n\n\n3/25\n\n\nNo Class: Spring Break\n\n\nnone\n\n\nnone\n\n\n\n\n11\n\n\nMonday\n\n\n3/28\n\n\nBayesian Estimation\n\n\nSee lecture page\n\n\nLab 9\n\n\n\n\n\n\nWednesday\n\n\n3/30\n\n\nCausality\n\n\nSee lecture page\n\n\nPS: none\n\n\n\n\n\n\nFriday\n\n\n4/1\n\n\nExperimental Design\n\n\nOpenIntro 2\n\n\nQuiz: none\n\n\n\n\n12\n\n\nMonday\n\n\n4/4\n\n\nExperimental Design II\n\n\nOpenIntro 2\n\n\nLab 10\n\n\n\n\n\n\nWednesday\n\n\n4/6\n\n\nCorrelation\n\n\nOpenIntro 7.1\n\n\nPS 10\n\n\n\n\n\n\nFriday\n\n\n4/8\n\n\nLine of Best Fit\n\n\nOpenIntro 7.2\n\n\nQuiz 4\n\n\n\n\n13\n\n\nMonday\n\n\n4/11\n\n\nNo Class\n\n\nNA\n\n\nLab 11\n\n\n\n\n\n\nWednesday\n\n\n4/13\n\n\nPredictions, Interpretations, Outliers\n\n\nOpenIntro 7.3\n\n\nPS 11\n\n\n\n\n\n\nFriday\n\n\n4/15\n\n\nInference for Regression\n\n\nOpenIntro 24\n\n\nQuiz: none\n\n\n\n\n14\n\n\nMonday\n\n\n4/18\n\n\nGeometry of Multiple Regression\n\n\nOpenIntro 8\n\n\nLab 12\n\n\n\n\n\n\nWednesday\n\n\n4/20\n\n\nAdding Complexity\n\n\nOpenIntro 25\n\n\nPS 12\n\n\n\n\n\n\nFriday\n\n\n4/22\n\n\nConcepts in Model Building\n\n\nOpenIntro 25\n\n\nQuiz 5\n\n\n\n\n15\n\n\nMonday\n\n\n4/25\n\n\nChallenges in Model Interpretation\n\n\nOpenIntro 25\n\n\nLab 13\n\n\n\n\n\n\nWednesday\n\n\n4/27\n\n\nFrom Linear to Logistic\n\n\nOpenIntro 9\n\n\nPS 13\n\n\n\n\n\n\nFriday\n\n\n4/29\n\n\nLast Lecture\n\n\nNA\n\n\nQuiz: none\n\n\n\n\n16\n\n\nMonday\n\n\n5/2\n\n\nRRR\n\n\nNA\n\n\nNA\n\n\n\n\n\n\nWednesday\n\n\n5/4\n\n\nRRR\n\n\nNA\n\n\nNA\n\n\n\n\n\n\nFriday\n\n\n5/6\n\n\nRRR\n\n\nNA\n\n\nNA\n\n\n\n\n17\n\n\nFinals Week\n\n\nNA\n\n\nSee campus exam schedule\n\n\nNA\n\n\nNA"
  }
]